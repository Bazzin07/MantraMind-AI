class MoodEntry {
  final String id;
  final String userId;
  final DateTime createdAt;
  final String mood; // e.g., "happy", "sad", "anxious", etc.
  final int moodScore; // 1-5 or 1-10
  final String? note;
  final String? triggers; // optional comma-separated triggers
  final String? aiInsight; // optional, generated by Gemini

  MoodEntry({
    required this.id,
    required this.userId,
    required this.createdAt,
    required this.mood,
    required this.moodScore,
    this.note,
    this.triggers,
    this.aiInsight,
  });

  factory MoodEntry.fromJson(Map<String, dynamic> json) {
    return MoodEntry(
      id: json['id'] as String,
      userId: json['user_id'] as String,
      createdAt: DateTime.parse(json['created_at'] as String),
      mood: json['mood'] as String,
      moodScore: (json['mood_score'] as num).toInt(),
      note: json['note'] as String?,
      triggers: json['triggers'] as String?,
      aiInsight: json['ai_insight'] as String?,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'user_id': userId,
      'created_at': createdAt.toIso8601String(),
      'mood': mood,
      'mood_score': moodScore,
      'note': note,
      'triggers': triggers,
      'ai_insight': aiInsight,
    };
  }
}
